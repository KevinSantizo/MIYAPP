# Generated by Django 2.2.4 on 2019-08-22 22:57

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Championship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_championship', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=25)),
                ('email', models.EmailField(max_length=254, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Field',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True)),
                ('status', models.CharField(blank=True, choices=[('R', 'Reserved'), ('A', 'Available')], default='A', max_length=1)),
                ('type', models.CharField(blank=True, choices=[('1', '5 Players'), ('2', '7 Players'), ('3', '11 Players')], default='1', max_length=1)),
                ('price', models.CharField(max_length=75)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sport.Company')),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_group', models.CharField(max_length=100)),
                ('championship_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sport.Championship')),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description_match', models.TextField()),
                ('day_played', models.DateField()),
                ('time_played', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_team', models.CharField(max_length=100)),
                ('players', models.PositiveIntegerField()),
                ('agent_team', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.Customer')),
                ('group_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sport.Group')),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goal_team', models.PositiveIntegerField()),
                ('date_result', models.DateField()),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sport.Match')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sport.Team')),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schedule_date', models.DateField(null=True)),
                ('schedule_time', models.TimeField(null=True)),
                ('company_reserve', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sport.Company')),
                ('customer_reserve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_reserve', to='users.Customer')),
                ('field_reserve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sport.Field')),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='team_one',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_one', to='sport.Team'),
        ),
        migrations.AddField(
            model_name='match',
            name='team_two',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_two', to='sport.Team'),
        ),
        migrations.AddField(
            model_name='championship',
            name='championship_company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sport.Company'),
        ),
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('token', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for this particular book across whole library')),
                ('reservation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='sport.Reservation')),
            ],
        ),
    ]
